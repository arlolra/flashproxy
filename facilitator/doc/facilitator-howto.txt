This document describes how to run a flash proxy facilitator on Debian 7.
We will use the domain name fp-facilitator.example.com.

== Overview

The facilitator consists of a backend server that is essentially a
dynamic database of client addresses, as well as helper programs that
receive client registrations from the Internet over various means and
pass them to the backend. There are three supported helper rendezvous
methods: HTTP, URL, and email.

The HTTP rendezvous uses an HTTP server and a CGI program. The HTTP
server is responsible for speaking TLS and invoking the CGI program. The
CGI program receives client registrations and proxy requests for
clients, parses them, and forwards them to the backend. We use Apache 2
as the HTTP server. The CGI script is facilitator.cgi. The backend is
facilitator.

The email rendezvous uses the helper program facilitator-email-poller.
Clients use the flashproxy-reg-email program to send an encrypted
message to a Gmail address. The poller constantly checks for new
messages and forwards them to facilitator-reg.

facilitator-reg is a simple program that forwards its standard input to
a locally running facilitator-reg-daemon process.

facilitator-reg-daemon accepts connections containing encrypted client
registrations and forwards them to the facilitator. It exists as a
process of its own so that only one program requires access to the
facilitator's private key.

The URL rendezvous uses the helper program flashproxy-reg-email. The
helper program doesn't actually make a registration; rather, it prints
out a URL which, when retrieved, makes the registration.

fac.py is a Python module containing code common to the various
facilitator programs.

== Basic and security setup

Install some essential packages and configure a firewall.

	# cat >/etc/apt/apt.conf.d/90suggests<<EOF
APT::Install-Recommends "0";
APT::Install-Suggests "0";
EOF
	# apt-get remove portmap
	# apt-get update
	# apt-get upgrade
	# apt-get install shorewall shorewall6

Away from the facilitator, generate an SSH key for authentication:

	$ ssh-keygen -f ~/.ssh/fp-facilitator
	$ ssh-copy-id -i ~/.ssh/fp-facilitator.pub root@fp-facilitator.example.com

Then log in and edit /etc/ssh/sshd_config to disable password
authentication:

	PasswordAuthentication no

Configure the firewall to allow only SSH and HTTPS.

	# cd /etc/shorewall
	# cp /usr/share/doc/shorewall/examples/Universal/{interfaces,policy,rules,zones} .
	Edit /etc/shorewall/rules:
SECTION NEW
SSH(ACCEPT)	net	$FW
HTTPS(ACCEPT)	net	$FW

	# cd /etc/shorewall6
	# cp /usr/share/doc/shorewall6/examples/Universal/{interfaces,policy,rules,zones} .
	Edit /etc/shorewall6/rules:
SECTION NEW
SSH(ACCEPT)	all	$FW
HTTPS(ACCEPT)	all	$FW

Edit /etc/default/shorewall and /etc/default/shorewall6 and set

	startup=1

Restart servers.

	# /etc/init.d/ssh restart
	# /etc/init.d/shorewall start
	# /etc/init.d/shorewall6 start

== Facilitator program installation

Create the user the daemons will run as.

	# useradd --shell /usr/sbin/nologin --system --home /nonexistent -M facilitator-nobody

Install the programs.

	# cd
	# apt-get install git python-m2crypto make
	# git clone https://git.torproject.org/flashproxy.git
	# cd flashproxy/facilitator
	# make install

This installs facilitator.cgi, facilitator, facilitator-email-poller,
facilitator-reg-daemon, facilitator-reg, and fac.py to /usr/local/bin.
It also installs System V init files to /etc/init.d/.

=== Registration daemon setup

The facilitator-reg-daemon program requires a private RSA key (used to
decrypt encrypted client registrations).

	# mkdir /etc/flashproxy
	# openssl genrsa -out /etc/flashproxy/reg-daemon.key 2048
	# chmod 600 /etc/flashproxy/reg-daemon.key
	# openssl rsa -pubout < /etc/flashproxy/reg-daemon.key > reg-daemon.pub

You will have to edit flashproxy-reg-email and copy the contents of
reg-daemon.pub into the appropriate place.

Install reg-daemon.key /etc/flashproxy to match what the init script
expects.

=== Init script setup

	# update-rc.d facilitator defaults
	# /etc/init.d/facilitator start
	# update-rc.d facilitator-reg-daemon defaults
	# /etc/init.d/facilitator-reg-daemon start

== HTTP server setup

Apache is the web server that runs the CGI program.

	# apt-get install apache2 libapache2-mod-evasive
	# a2enmod ssl headers

Edit /etc/apache2/ports.conf and comment out the port 80 configuration.

	# NameVirtualHost *:80
	# Listen 80

Create a new file /etc/apache2/sites-available/fp-facilitator with
these contents:
	MaxClients 256
	<VirtualHost *:443>
		ServerName fp-facilitator.example.com
		DocumentRoot /dev/null
		ScriptAliasMatch ^(.*) /usr/local/bin/facilitator.cgi$1
		CustomLog /dev/null common
		ErrorLog ${APACHE_LOG_DIR}/error.log
		LogLevel warn
		SSLEngine on
		SSLCertificateFile /etc/apache2/fp-facilitator.pem
		SSLCertificateChainFile /etc/apache2/intermediate.pem
		Header add Strict-Transport-Security "max-age=15768000"
	</VirtualHost>
intermediate.pem is a possible intermediate certificate file provided by
the CA; if you did not get one, then leave off the
SSLCertificateChainFile line.

Link the configured site into sites-enabled.
	# a2ensite fp-facilitator

=== HTTPS setup

The HTTP server should serve only over HTTPS and not unencrypted HTTP.
You will need a certificate and private key from a certificate
authority. An article on making a certificate signing request and
getting it signed is here:
	http://www.debian-administration.org/articles/284
This is the basic command to generate a CSR.
	$ openssl req -new -nodes -out fp-facilitator.csr.pem
The instructions below assume you have an offline private key
in fp-facilitator.key.pem and a certificate in fp-facilitator.crt.pem.

Make a file containing both the private key and a certificate.

	$ cat fp-facilitator.key.pem fp-facilitator.crt.pem > fp-facilitator.pem
	$ chmod 400 fp-facilitator.pem

Copy the new fp-facilitator.pem to the facilitator server as
/etc/apache2/fp-facilitator.pem.

	# /etc/init.d/apache2 restart

=== Email poller setup

The facilitator-email-poller program requires a password that is used to
log in to the designated Gmail account. See the file gmail-howto.txt for
instructions on setting up a Gmail account. After you've set up the
account and have the password, save it to a file reg-email.pass and make
it not readable or writable by anyone but its owner.

	# chmod 600 /etc/flashproxy/reg-email.pass

Install reg-email.pass to /etc/flashproxy to match what the init script
expects.

	# update-rc.d facilitator-email-poller defaults
	# /etc/init.d/facilitator-email-poller start
